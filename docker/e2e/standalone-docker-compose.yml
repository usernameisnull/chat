# Reference configuration for a simple Tinode server.
# Includes:
# * Mysql database
# * Tinode server
# * Tinode exporters

version: '3.4'

# Base Tinode template.
x-tinode:
  &tinode-base
  depends_on:
    - mysql
  image: tinode/tinode:latest
  restart: always

x-tinode-env-vars: &tinode-env-vars
  "STORE_USE_ADAPTER": "mysql"
  "DEFAULT_SAMPLE_DATA": ""
  "FCM_PUSH_ENABLED": "false"
  # "FCM_API_KEY": "<your key>"
  # "FCM_APP_ID": "<your app id>"
  # "FCM_PROJECT_ID": "<your project if>"
  # "FCM_SENDER_ID": <your sender id>
  # "FCM_VAPID_KEY": "<your vapid key>"
  # "IOS_UNIV_LINKS_APP_ID": "<ios universal links app id>"
  "PPROF_URL": "/pprof"
  # Run tinode server only.
  "SERVICES_TO_RUN": "tinode"
  # You can provide your own tinode config by setting EXT_CONFIG env var and binding your configuration file to
  # "EXT_CONFIG": "/etc/tinode/tinode.conf"

x-exporter-env-vars: &exporter-env-vars
  "TINODE_ADDR": "http://tinode.host:18080/stats/expvar/"
  # Prometheus configuration:
  "SERVE_FOR": "prometheus"
  "PROM_NAMESPACE": "tinode"
  "PROM_METRICS_PATH": "/metrics"
  # InfluxDB configation:
  # "SERVE_FOR": "influxdb"
  # "INFLUXDB_VERSION": 1.7
  # "INFLUXDB_ORGANIZATION": "<your organization>"
  # "INFLUXDB_PUSH_INTERVAL": 30
  # "INFLUXDB_PUSH_ADDRESS": "https://mon.tinode.co/intake"
  # "INFLUXDB_AUTH_TOKEN": "abcdef"

services:
  mysql:
    image: mysql:5.7
    container_name: mysql
    restart: always
    networks:
      internal:
        ipv4_address: 172.19.0.3
    # Use your own volume.
    # volumes:
    #   - <mysql directory in your file system>:/var/lib/mysql
    environment:
      - MYSQL_ALLOW_EMPTY_PASSWORD=yes
    healthcheck:
      test: ["CMD", "mysqladmin" ,"ping", "-h", "localhost"]
      timeout: 5s
      retries: 10

  # Run this only when you need to initialize Tinode database.
  init-db:
    << : *tinode-base
    container_name: init-db
    hostname: init-db
    restart: "no"
    networks:
      internal:
        ipv4_address: 172.19.0.2
    environment:
      << : *tinode-env-vars
      "SERVICES_TO_RUN": "init-db"
      "UPGRADE_DB": "false"

  # Run this only when you need to upgrade Tinode database to a newer version.
  upgrade-db:
    << : *tinode-base
    container_name: upgrade-db
    hostname: upgrade-db
    restart: "no"
    networks:
      internal:
        ipv4_address: 172.19.0.2
    environment:
      << : *tinode-env-vars
      "SERVICES_TO_RUN": "init-db"
      "UPGRADE_DB": "true"

  tinode-0:
    << : *tinode-base
    container_name: tinode-0
    hostname: tinode-0
    networks:
      internal:
        ipv4_address: 172.19.0.5
    # You can mount your volumes as necessary:
    # volumes:
    #   # E.g. external config.
    #   - <path to your tinode.conf>:/etc/tinode/tinode.conf
    #   # Logs directory.
    #   - <path to your tinode-0 logs directory>:/var/log
    ports:
      - "6060:18080"
    environment:
      << : *tinode-env-vars

  # Monitoring.
  # Exporters are paired with tinode instances.
  exporter-0:
    container_name: exporter-0
    hostname: exporter-0
    depends_on:
      - tinode-0
    image: tinode/exporter:latest
    restart: always
    networks:
      internal:
    ports:
      - "6222:6222"
    environment:
      << : *exporter-env-vars
      # Remove?
      "INSTANCE": "tinode-exp-0"
    extra_hosts:
      - "tinode.host:172.19.0.5"

networks:
  internal:
    ipam:
      driver: default
      config:
        - subnet: "172.19.0.0/24"
